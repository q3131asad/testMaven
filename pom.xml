<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.guodulink</groupId>
	<artifactId>testMaven</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>gdhlJarProject</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>GBK</project.build.sourceEncoding>
	</properties>
	<!-- 开发人员信息 -->
	<developers>
		<developer>
			<id>lizihao</id>
			<email>lizihao@guodulink.net</email>
			<name>lizihao</name>
			<organization>Research and development department</organization>
			<roles>
				<role>softwareengineer</role>
			</roles>
			<timezone>8</timezone>
		</developer>
	</developers>

	<!--许可证 -->
	<licenses>
		<license>
			<url>http://127.0.0.1:8080</url>
			<comments>评论</comments>
			<name>北京国都互联科技有限公司版权所有</name>
		</license>
	</licenses>

	<!-- 项目依赖 -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- 构建项目时的配置 -->
	<build>

		<!-- 配置文件打放入位置 -->
		<resources>
			<resource>
				<directory>config</directory>
				<targetPath>${project.build.directory}/config</targetPath>
			</resource>
			<resource>
				<directory>src/main/bin</directory>
				<targetPath>${project.build.directory}/bin</targetPath>
			</resource>
		</resources>

		<!-- 构建时加入的插件 -->
		<plugins>
			<!-- 规定java版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>GBK</encoding>
				</configuration>
			</plugin>

			<!-- 跳过test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>


			<!-- The configuration of maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Configuration of the archiver -->
					<archive>

						<!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
						<addMavenDescriptor>false</addMavenDescriptor>

						<!-- Manifest specific configuration -->
						<manifest>
							<!-- 是否要把第三方jar放到manifest的classpath中 -->
							<addClasspath>true</addClasspath>
							<!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ -->
							<classpathPrefix>lib/</classpathPrefix>
							<!-- 应用的main class 这里填入主方法类 -->

							<mainClass>net.guodulink.gdhlJarProject.Test01</mainClass>
						</manifest>
					</archive>
					<!-- 过滤掉不希望包含在jar中的文件 -->
					<excludes>
						<exclude>${project.basedir}/config/*</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- The configuration of maven-assembly-plugin -->

			<!-- 生成项目骨架archetype的插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-archetype-plugin</artifactId>
				<version>2.2</version>
			</plugin>


		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>


						<!-- 配置报告信息 -->
						<reportPlugins>
							<!-- 检查代码规范报告 -->
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-checkstyle-plugin</artifactId>
							</plugin>
							<!-- 测试报告 -->
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-surefire-report-plugin</artifactId>
							</plugin>
							<!-- 项目基本信息报告 -->
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-project-info-reports-plugin</artifactId>
								<version>2.2</version>
								<configuration>
									<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
									<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
								</configuration>
							</plugin>
							<!-- 项目API doc报告 -->
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-javadoc-plugin</artifactId>
								<version>2.7</version>
							</plugin>
							<!-- 项目源代码报告 -->
							<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>jxr-maven-plugin</artifactId> 
								</plugin> -->
							<!-- 项目还需要做的TODO报告 -->
							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>taglist-maven-plugin</artifactId>
							</plugin>
							<!-- 生成站点文件具体信息报告 -->
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-linkcheck-plugin</artifactId>
								<version>1.1</version>
								<configuration></configuration>
							</plugin>
							<!-- 单元测试覆盖率报告 -->
							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>cobertura-maven-plugin</artifactId>
							</plugin>
						</reportPlugins>
						<locales>zh_CN</locales>
					</configuration>

				</plugin>

			</plugins>

		</pluginManagement>

	</build>

	<!-- 项目发布时的配置 releases和snapshots版本发布地址 -->
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Nexus Release Repository</name>
			<url>http://192.168.1.114:28899/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Nexus Snapshot Repository</name>
			<url>http://192.168.1.114:28899/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
</project>
